apply plugin: 'com.android.model.library'

model {

    android {
        compileSdkVersion = "android-23"
        buildToolsVersion = "23.0.2"

        defaultConfig.with {
            minSdkVersion.apiLevel = 22
            targetSdkVersion.apiLevel = 24
            versionCode = 1
            versionName = "0.0.1"
        }

        compileOptions.with {
            sourceCompatibility=JavaVersion.VERSION_1_7
            targetCompatibility=JavaVersion.VERSION_1_7
        }

    }

    android.ndk {
        moduleName = "rhi_vulkan"
        cppFlags.add("-std=c++14")
        toolchain = "clang"
        stl = "gnustl_static"
        cppFlags.add("-I${file("../../../Source")}".toString())
        cppFlags.add("-I${file("../../../Source/RHI")}".toString())
        cppFlags.add("-I${file("../../../Source/RHI/Vulkan")}".toString())
        cppFlags.add("-I${file("../../../Include")}".toString())
        cppFlags.add("-I${file(gradle.vulkanDir)}".toString())
        cppFlags.add("-D VK_USE_PLATFORM_ANDROID_KHR")
        cppFlags.add("-DK3DPLATFORM_OS_ANDROID=1")
        cppFlags.add("-fexceptions")
        ldLibs.addAll(["log", "android"])
    }

    android.abis {
        create("armeabi-v7a") {
            cppFlags.addAll(["-mhard-float", "-D_NDK_MATH_NO_SOFTFP=1", "-mfloat-abi=hard"])
            ldLibs.add("m_hard")
            ldFlags.add("-Wl,--no-warn-mismatch")
            ldFlags.add("-L${file("../../../Source/ThirdParty/vulkan/1.0.11.1/Android/lib/")}".toString())
        }
        create("arm64-v8a") {
            ldFlags.add("-L${file("../../../Source/ThirdParty/vulkan/1.0.11.1/Android/lib64/")}".toString())
        }
    }

    android.sources {
        main {

            jni {
                dependencies {
                    project ":Core" linkage "shared"
                    project ":ShaderCompiler" linkage "shared"
                }
                source {
                    srcDir '../../../Source/RHI/Vulkan'
                }
            }
        }
    }

    android.buildTypes {
        release {
            ndk.with {
                debuggable = true
            }
            minifyEnabled = false
            proguardFiles.add(file('proguard-rules.pro'))
        }
    }

    android.productFlavors {
        create("all") {
            ndk.abiFilters.add("arm64-v8a")
        }
    }
}