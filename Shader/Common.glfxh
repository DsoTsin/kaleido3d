float DecodeFloatRGBA(vec4 rgba)
{
	return dot(rgba, vec4(1, 1 / 255.0f, 1 / 65025.0f, 1 / 16581375.0f));
}

vec4 EncodeFloatRGBA(float v)
{
	vec4 enc = vec4(1.0f, 255.0f, 65025.0f, 16581375.0f) * v;
	enc = fract(enc);
	enc -= enc.yzww * vec4(1 / 255.0f, 1 / 255.0f, 1 / 255.0f, 0);
	return enc;
}

vec3 RestoreNormal(vec2 normal_xy)
{
	vec3 normal;
	normal.xy = normal_xy;
	normal.z = sqrt(max(0.0f, 1 - dot(normal.xy, normal.xy)));
	return normalize(normal);
}

float3 decompress_normal(float4 comp_normal)
{
	return restore_normal(get_xy_channel(comp_normal) * 2 - 1);
}
