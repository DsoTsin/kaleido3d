// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: req_statistic.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "req_statistic.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace protocol {

namespace {

const ::google_public::protobuf::Descriptor* req_statistic_descriptor_ = NULL;
const ::google_public::protobuf::internal::GeneratedMessageReflection*
  req_statistic_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_req_5fstatistic_2eproto() {
  protobuf_AddDesc_req_5fstatistic_2eproto();
  const ::google_public::protobuf::FileDescriptor* file =
    ::google_public::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "req_statistic.proto");
  GOOGLE_CHECK(file != NULL);
  req_statistic_descriptor_ = file->message_type(0);
  static const int req_statistic_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_statistic, mac_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_statistic, logintime_),
  };
  req_statistic_reflection_ =
    new ::google_public::protobuf::internal::GeneratedMessageReflection(
      req_statistic_descriptor_,
      req_statistic::default_instance_,
      req_statistic_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_statistic, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_statistic, _unknown_fields_),
      -1,
      ::google_public::protobuf::DescriptorPool::generated_pool(),
      ::google_public::protobuf::MessageFactory::generated_factory(),
      sizeof(req_statistic));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google_public::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_req_5fstatistic_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google_public::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    req_statistic_descriptor_, &req_statistic::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_req_5fstatistic_2eproto() {
  delete req_statistic::default_instance_;
  delete req_statistic_reflection_;
}

void protobuf_AddDesc_req_5fstatistic_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google_public::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\023req_statistic.proto\022\010protocol\"/\n\rreq_s"
    "tatistic\022\013\n\003mac\030\001 \002(\t\022\021\n\tloginTime\030\002 \002(\003", 80);
  ::google_public::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "req_statistic.proto", &protobuf_RegisterTypes);
  req_statistic::default_instance_ = new req_statistic();
  req_statistic::default_instance_->InitAsDefaultInstance();
  ::google_public::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_req_5fstatistic_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_req_5fstatistic_2eproto {
  StaticDescriptorInitializer_req_5fstatistic_2eproto() {
    protobuf_AddDesc_req_5fstatistic_2eproto();
  }
} static_descriptor_initializer_req_5fstatistic_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int req_statistic::kMacFieldNumber;
const int req_statistic::kLoginTimeFieldNumber;
#endif  // !_MSC_VER

req_statistic::req_statistic()
  : ::google_public::protobuf::Message() {
  SharedCtor();
}

void req_statistic::InitAsDefaultInstance() {
}

req_statistic::req_statistic(const req_statistic& from)
  : ::google_public::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void req_statistic::SharedCtor() {
  _cached_size_ = 0;
  mac_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::kEmptyString);
  logintime_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

req_statistic::~req_statistic() {
  SharedDtor();
}

void req_statistic::SharedDtor() {
  if (mac_ != &::google_public::protobuf::internal::kEmptyString) {
    delete mac_;
  }
  if (this != default_instance_) {
  }
}

void req_statistic::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google_public::protobuf::Descriptor* req_statistic::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return req_statistic_descriptor_;
}

const req_statistic& req_statistic::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_req_5fstatistic_2eproto();
  return *default_instance_;
}

req_statistic* req_statistic::default_instance_ = NULL;

req_statistic* req_statistic::New() const {
  return new req_statistic;
}

void req_statistic::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_mac()) {
      if (mac_ != &::google_public::protobuf::internal::kEmptyString) {
        mac_->clear();
      }
    }
    logintime_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool req_statistic::MergePartialFromCodedStream(
    ::google_public::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google_public::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google_public::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string mac = 1;
      case 1: {
        if (::google_public::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google_public::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google_public::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mac()));
          ::google_public::protobuf::internal::WireFormat::VerifyUTF8String(
            this->mac().data(), this->mac().length(),
            ::google_public::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_loginTime;
        break;
      }

      // required int64 loginTime = 2;
      case 2: {
        if (::google_public::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google_public::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_loginTime:
          DO_((::google_public::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google_public::protobuf::int64, ::google_public::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &logintime_)));
          set_has_logintime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google_public::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google_public::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google_public::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void req_statistic::SerializeWithCachedSizes(
    ::google_public::protobuf::io::CodedOutputStream* output) const {
  // required string mac = 1;
  if (has_mac()) {
    ::google_public::protobuf::internal::WireFormat::VerifyUTF8String(
      this->mac().data(), this->mac().length(),
      ::google_public::protobuf::internal::WireFormat::SERIALIZE);
    ::google_public::protobuf::internal::WireFormatLite::WriteString(
      1, this->mac(), output);
  }

  // required int64 loginTime = 2;
  if (has_logintime()) {
    ::google_public::protobuf::internal::WireFormatLite::WriteInt64(2, this->logintime(), output);
  }

  if (!unknown_fields().empty()) {
    ::google_public::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google_public::protobuf::uint8* req_statistic::SerializeWithCachedSizesToArray(
    ::google_public::protobuf::uint8* target) const {
  // required string mac = 1;
  if (has_mac()) {
    ::google_public::protobuf::internal::WireFormat::VerifyUTF8String(
      this->mac().data(), this->mac().length(),
      ::google_public::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google_public::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->mac(), target);
  }

  // required int64 loginTime = 2;
  if (has_logintime()) {
    target = ::google_public::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->logintime(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google_public::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int req_statistic::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string mac = 1;
    if (has_mac()) {
      total_size += 1 +
        ::google_public::protobuf::internal::WireFormatLite::StringSize(
          this->mac());
    }

    // required int64 loginTime = 2;
    if (has_logintime()) {
      total_size += 1 +
        ::google_public::protobuf::internal::WireFormatLite::Int64Size(
          this->logintime());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google_public::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void req_statistic::MergeFrom(const ::google_public::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const req_statistic* source =
    ::google_public::protobuf::internal::dynamic_cast_if_available<const req_statistic*>(
      &from);
  if (source == NULL) {
    ::google_public::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void req_statistic::MergeFrom(const req_statistic& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_mac()) {
      set_mac(from.mac());
    }
    if (from.has_logintime()) {
      set_logintime(from.logintime());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void req_statistic::CopyFrom(const ::google_public::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void req_statistic::CopyFrom(const req_statistic& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool req_statistic::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void req_statistic::Swap(req_statistic* other) {
  if (other != this) {
    std::swap(mac_, other->mac_);
    std::swap(logintime_, other->logintime_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google_public::protobuf::Metadata req_statistic::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google_public::protobuf::Metadata metadata;
  metadata.descriptor = req_statistic_descriptor_;
  metadata.reflection = req_statistic_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace protocol

// @@protoc_insertion_point(global_scope)
