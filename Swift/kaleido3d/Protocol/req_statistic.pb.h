// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: req_statistic.proto

#ifndef PROTOBUF_req_5fstatistic_2eproto__INCLUDED
#define PROTOBUF_req_5fstatistic_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protocol {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_req_5fstatistic_2eproto();
void protobuf_AssignDesc_req_5fstatistic_2eproto();
void protobuf_ShutdownFile_req_5fstatistic_2eproto();

class req_statistic;

// ===================================================================

class req_statistic : public ::google_public::protobuf::Message {
 public:
  req_statistic();
  virtual ~req_statistic();

  req_statistic(const req_statistic& from);

  inline req_statistic& operator=(const req_statistic& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google_public::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google_public::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google_public::protobuf::Descriptor* descriptor();
  static const req_statistic& default_instance();

  void Swap(req_statistic* other);

  // implements Message ----------------------------------------------

  req_statistic* New() const;
  void CopyFrom(const ::google_public::protobuf::Message& from);
  void MergeFrom(const ::google_public::protobuf::Message& from);
  void CopyFrom(const req_statistic& from);
  void MergeFrom(const req_statistic& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google_public::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google_public::protobuf::io::CodedOutputStream* output) const;
  ::google_public::protobuf::uint8* SerializeWithCachedSizesToArray(::google_public::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google_public::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string mac = 1;
  inline bool has_mac() const;
  inline void clear_mac();
  static const int kMacFieldNumber = 1;
  inline const ::std::string& mac() const;
  inline void set_mac(const ::std::string& value);
  inline void set_mac(const char* value);
  inline void set_mac(const char* value, size_t size);
  inline ::std::string* mutable_mac();
  inline ::std::string* release_mac();
  inline void set_allocated_mac(::std::string* mac);

  // required int64 loginTime = 2;
  inline bool has_logintime() const;
  inline void clear_logintime();
  static const int kLoginTimeFieldNumber = 2;
  inline ::google_public::protobuf::int64 logintime() const;
  inline void set_logintime(::google_public::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:protocol.req_statistic)
 private:
  inline void set_has_mac();
  inline void clear_has_mac();
  inline void set_has_logintime();
  inline void clear_has_logintime();

  ::google_public::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* mac_;
  ::google_public::protobuf::int64 logintime_;

  mutable int _cached_size_;
  ::google_public::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_req_5fstatistic_2eproto();
  friend void protobuf_AssignDesc_req_5fstatistic_2eproto();
  friend void protobuf_ShutdownFile_req_5fstatistic_2eproto();

  void InitAsDefaultInstance();
  static req_statistic* default_instance_;
};
// ===================================================================


// ===================================================================

// req_statistic

// required string mac = 1;
inline bool req_statistic::has_mac() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void req_statistic::set_has_mac() {
  _has_bits_[0] |= 0x00000001u;
}
inline void req_statistic::clear_has_mac() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void req_statistic::clear_mac() {
  if (mac_ != &::google_public::protobuf::internal::kEmptyString) {
    mac_->clear();
  }
  clear_has_mac();
}
inline const ::std::string& req_statistic::mac() const {
  return *mac_;
}
inline void req_statistic::set_mac(const ::std::string& value) {
  set_has_mac();
  if (mac_ == &::google_public::protobuf::internal::kEmptyString) {
    mac_ = new ::std::string;
  }
  mac_->assign(value);
}
inline void req_statistic::set_mac(const char* value) {
  set_has_mac();
  if (mac_ == &::google_public::protobuf::internal::kEmptyString) {
    mac_ = new ::std::string;
  }
  mac_->assign(value);
}
inline void req_statistic::set_mac(const char* value, size_t size) {
  set_has_mac();
  if (mac_ == &::google_public::protobuf::internal::kEmptyString) {
    mac_ = new ::std::string;
  }
  mac_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* req_statistic::mutable_mac() {
  set_has_mac();
  if (mac_ == &::google_public::protobuf::internal::kEmptyString) {
    mac_ = new ::std::string;
  }
  return mac_;
}
inline ::std::string* req_statistic::release_mac() {
  clear_has_mac();
  if (mac_ == &::google_public::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = mac_;
    mac_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void req_statistic::set_allocated_mac(::std::string* mac) {
  if (mac_ != &::google_public::protobuf::internal::kEmptyString) {
    delete mac_;
  }
  if (mac) {
    set_has_mac();
    mac_ = mac;
  } else {
    clear_has_mac();
    mac_ = const_cast< ::std::string*>(&::google_public::protobuf::internal::kEmptyString);
  }
}

// required int64 loginTime = 2;
inline bool req_statistic::has_logintime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void req_statistic::set_has_logintime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void req_statistic::clear_has_logintime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void req_statistic::clear_logintime() {
  logintime_ = GOOGLE_LONGLONG(0);
  clear_has_logintime();
}
inline ::google_public::protobuf::int64 req_statistic::logintime() const {
  return logintime_;
}
inline void req_statistic::set_logintime(::google_public::protobuf::int64 value) {
  set_has_logintime();
  logintime_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace protocol

#ifndef SWIG
namespace google_public {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_req_5fstatistic_2eproto__INCLUDED
